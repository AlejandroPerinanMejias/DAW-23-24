// {
// 	// Place your snippets for xml here. Each snippet is defined under a snippet name and has a prefix, body and 
// 	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
// 	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
// 	// same ids are connected.
// 	// Example:
// 	// "Print to console": {
// 	// 	"prefix": "log",
// 	// 	"body": [
// 	// 		"console.log('$1');",
// 	// 		"$2"
// 	// 	],
// 	// 	"description": "Log output to console"
// 	// }
// }
{
	"Comment": {
	"prefix": "xmlstart",
	"body": [
		"<?xml version='1.0' encoding='UTF-8'?>"
	],
	"description": "base del archivo xml"
	},

	"css": {
		"prefix": "xmlcss",
		"body": [
			"<?xml-stylesheet type='text/css' href='.css' ?>",
		],
		"description": "enlace css"
	},


// SNIPPETS PARA DTD
	"dtdstart": {
		"prefix": "dtdstart",
		"body": [
			"<!DOCTYPE ${1:raiz} [\n${2:}\n]>",
		],
		"description": ""
	},

	"dtdin": {
		"prefix": "dtdenlace",
		"body": [
			"<!DOCTYPE ${1:raiz} SYSTEM '${2:dtd.dtd}'>",
		],
		"description": "enlace dtd"
	},

	"dtdelement": {
		"prefix": "dtdelement",
		"body": [
			"<!ELEMENT ${1:etiqueta} (#PCDATA)>",
		],
		"description": "Elemento DTD. + para 1 o mas. ? para 0 o 1. * para 0, 1 o varios. Tambien puede tener (Opcion1 | Opcion2). EMPTY"
	},

	"dtdatributo": {
		"prefix": "dtdatributo",
		"body": [
			"<!ATTLIST ${1:etiqueta} ${2:atributo} >",
		],
		"description": "Atributo DTD. ID | CDATA | (Opcion1 | Opcion2). #REQUIRED | #IMPLIED"
	},

// SNIPPETS PARA XSL

	"Base xsl": {
		"prefix": "xslstart",
		"body": [
			"<?xml version='1.0' encoding='UTF-8'?>",
			"<xsl:stylesheet xmlns:xsl='http://www.w3.org/1999/XSL/Transform' version='1.0'>",
			"\t<xsl:template match='/'>",
			"\t\t",
			"\t</xsl:template>",
			"</xsl:stylesheet>"
		],
		"description": "base del archivo xsl"
		},

		"valueof": {
			"prefix": "valueof",
			"body": [
				"<xsl:value-of select='$0' />",
			],
			"description": "base del archivo xsl"
		},

		"foreach": {
			"prefix": "foreach",
			"body": [
				"<xsl:for-each select='$0' >",
				"\t",
				"</xsl:for-each>"
			],
			"description": "base del archivo xsl"
		},

		"sortxsl": {
			"prefix": "sortxsl",
			"body": [
				"<xsl:sort select='$0' />",
			],
			"description": "base del archivo xsl"
		},

		"order": {
			"prefix": "orderxsl",
			"body": [
				"<xsl:sort select='$0' order=''/>",
			],
			"description": "base del archivo xsl"
		},

		"ifxsl": {
			"prefix": "ifxsls",
			"body": [
				"<xsl:if test='$0' >",
				"\t",
				"</xsl:if>"
			],
			"description": "base del archivo xsl"
		},

		"choose": {
			"prefix": "choose",
			"body": [
				"<xsl:choose>",
					"\t<xsl:when test=''>",
						"\t",
					"\t</xsl:when>",
				"</xsl:choose>"
			],
			"description": "base del archivo xsl"
		},

		"whenxsl": {
			"prefix": "whenxsl",
			"body": [
				"\t<xsl:when test=''>",
					"\t",
				"\t</xsl:when>",
			],
			"description": "base del archivo xsl"
		},

		"otherwise": {
			"prefix": "otherwise",
			"body": [
				"\t<xsl:otherwise>",
					"\t",
				"\t</xsl:otherwise>",
			],
			"description": "base del archivo xsl"
		},

		"template": {
			"prefix": "template_base",
			"body": [
				"\t<xsl:template match=''>",
					"\t",
				"\t</xsl:template>",
			],
			"description": "base del archivo xsl"
		},

		"applytemplate": {
			"prefix": "applytemplate",
			"body": [
				"<xsl:apply-templates select='$0' />",
			],
			"description": "base del archivo xsl"
		},

		"element": {
			"prefix": "element",
			"body": [
				"\t<xsl:element name='$0'>",
					"\t",
				"\t</xsl:element>",
			],
			"description": "base del archivo xsl"
		},

		"attribute": {
			"prefix": "attibrute",
			"body": [
				"\t<xsl:attribute name='$0'>",
					"\t",
				"\t</xsl:attribute>",
			],
			"description": "base del archivo xsl"
		},

		"outputxml": {
			"prefix": "outputxml",
			"body": [
				"<xsl:output method='xml' version='1.0' encoding='UTF-8' indent='yes'/>",
			],
			"description": "base del archivo xsl"
		},

		"outputhtml": {
			"prefix": "outputhtml",
			"body": [
				"<xsl:output method='html' version='1.0' encoding='UTF-8' indent='yes'/>",
			],
			"description": "base del archivo xsl"
		},

		"texto": {
			"prefix": "texto",
			"body": [
				"<xsl:text> $0 </xsl:text>",
			],
			"description": "base del archivo xsl"
		},
}